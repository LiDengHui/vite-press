import{F as e,b as t,j as n,m as r,p as i,q as a}from"./chunks/plugin-vue_export-helper.CL7LGUog.js";const o=JSON.parse(`{"title":"JSP","description":"","frontmatter":{},"headers":[],"relativePath":"语言/后端/JSP.md","filePath":"语言/后端/JSP.md","lastUpdated":1750738239000}`),s={name:`语言/后端/JSP.md`};function c(t,o,s,c,l,u){return e(),r(`div`,null,o[0]||=[i(`<h1 id="jsp" tabindex="-1">JSP <a class="header-anchor" href="#jsp" aria-label="Permalink to “JSP”">​</a></h1><h2 id="指令" tabindex="-1">指令 <a class="header-anchor" href="#指令" aria-label="Permalink to “指令”">​</a></h2><ol><li><p>作用： 用于配置 JSP 页面，导入资源文件</p></li><li><p>格式： &lt;%@ 指令名称 属性名 1=属性值 1 属性名 2=属性值 2 %&gt;</p></li><li><p>分类</p><ol><li><p>page: 配置 JSP 页面</p><ul><li>contentType: 等同于 response.setContentType()</li><li>import: 导包</li><li>errorPage: 当页面发生异常后，会自动跳转到指定的错误页面</li><li>isErrorPage： 标识当前是不是错误页面 <ol><li>true: 是，可以使用内置对象 exception</li><li>false: 否，默认值，不可以使用内置对象 exception</li></ol></li></ul></li><li><p>include: 页面包含导入页面的资源文件</p><ul><li>&lt;%@ include filee=&quot;top.jsp&quot; %&gt;</li></ul></li><li><p>taglib : 导入资源</p><ul><li>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;<a href="http://java.sum.com/jsp/jstl/core" target="_blank" rel="noreferrer">http://java.sum.com/jsp/jstl/core</a>&quot; %&gt;</li></ul></li><li><p>prefix: 前缀，自定义</p></li></ol></li></ol><h2 id="注释" tabindex="-1">注释 <a class="header-anchor" href="#注释" aria-label="Permalink to “注释”">​</a></h2><ol><li><p>html 注释</p><ul><li><code>&lt;!-- --&gt;</code>: 只能注释 html 代码片段</li></ul></li><li><p>jsp 注释：推荐使用</p><ul><li><code>&lt;%-- --%&gt;</code>: 可以注释所有</li></ul></li></ol><h2 id="内置对象" tabindex="-1">内置对象 <a class="header-anchor" href="#内置对象" aria-label="Permalink to “内置对象”">​</a></h2><p>在 JSP 页面中不需要创建，直接使用的对象</p><table tabindex="0"><thead><tr><th>变量名</th><th>真实类型</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>PageContext</td><td>当前页面的共享数据</td></tr><tr><td>request</td><td>HttpServletRequest</td><td>一次请求访问的多个资源</td></tr><tr><td>session</td><td>HttpSession</td><td>一次会话的多个请求期间</td></tr><tr><td>application</td><td>ServletContext</td><td>所有用户间共享数据</td></tr><tr><td>response</td><td>HttpServletReponse</td><td>响应对象</td></tr><tr><td>page</td><td>Object</td><td>当前页面(Servelet)对象 this</td></tr><tr><td>out</td><td>JsWriter</td><td>输出对象，数据输出到页面上</td></tr><tr><td>config</td><td>ServletConfig</td><td>Servlet 的配置对象</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象</td></tr></tbody></table><h2 id="el-表达式" tabindex="-1">EL 表达式 <a class="header-anchor" href="#el-表达式" aria-label="Permalink to “EL 表达式”">​</a></h2>`,9),n(`ol`,null,[n(`li`,null,[n(`p`,null,`概念: Express Language 表达式语言`)]),n(`li`,null,[n(`p`,null,`作用: 替换和简化 jsp 页面中 java 代码的编写`)]),n(`li`,null,[n(`p`,null,[a(`语法: `),n(`code`,null,"${表达式}")])]),n(`li`,null,[n(`p`,null,`注意: jsp 默认支持 el 表达式。如果要忽略 el 表达式`),n(`ol`,null,[n(`li`,null,[n(`p`,null,[a(`设置 jsp 中 page 指令中: `),n(`code`,null,`isElIgnore="true"`),a(` 忽略当前 jsp 页面中所有的 el 表达式`)])]),n(`li`,null,[n(`p`,null,[n(`code`,null,"\\${表达式}"),a(` : 忽略当前这个 el 表达式`)])])])]),n(`li`,null,[n(`p`,null,`使用`),n(`ol`,null,[n(`li`,null,[n(`p`,null,`运算符`),n(`ul`,null,[n(`li`,null,[a(`算数运算符: `),n(`code`,null,`+ - * /(div) %(mod)`)]),n(`li`,null,[a(`比较运算符: `),n(`code`,null,`> < >= <= == !=`)]),n(`li`,null,[a(`逻辑运算符: `),n(`code`,null,`&&(and) ||(or) !(not)`)]),n(`li`,null,[a(`空运算符: `),n(`code`,null,`empty`),n(`ol`,null,[n(`li`,null,`功能: 用于判断字符串、集合、数组对象是否为 null 或长度为 0`),n(`li`,null,"${not empty str}: 判断字符串、集合、数组对象是否不为 null 或者长度 > 0")])])])]),n(`li`,null,[n(`p`,null,`获取值`),n(`ul`,null,[n(`li`,null,[n(`p`,null,`el 表达式只能从与对象中获取值`)]),n(`li`,null,[n(`p`,null,`语法`),n(`ol`,null,[n(`li`,null,[n(`p`,null,"${域名称.键名}: 从指定域中获取指定键的值"),n(`ul`,null,[n(`li`,null,[n(`p`,null,`域名称`),n(`ul`,null,[n(`li`,null,`pagescope -> pageContext`),n(`li`,null,`requestScope -> request`),n(`li`,null,`sessionScope -> session`),n(`li`,null,`applicationScope -> application(ServletContext)`)])]),n(`li`,null,[n(`p`,null,`举例: 在 request 域中存储了 name-张`)]),n(`li`,{"requestScope.name":``},[n(`p`,null,`获取 $`)])])]),n(`li`,null,[n(`p`,null,"${键名}: 表示依次从最小的域中查找是否有该键对应的值，直到找到为止")]),n(`li`,null,[n(`p`,null,`获取对象，List，Map`),n(`ol`,null,[n(`li`,{"域名称.键名.属性名":``},[a(`对象: $ `),n(`ul`,null,[n(`li`,null,`本质上会调用对象的 getter 方法`)])]),n(`li`,{"域名称.键名[索引]":``},`List 集合: $`),n(`li`,{"域名称.键名.key":``,名称:``},`Map 集合: $`)])])])])])])])])],-1)])}var l=t(s,[[`render`,c]]);export{o as __pageData,l as default};