import{_ as d,c as e,o,a5 as r}from"./chunks/framework.Basl2YsL.js";const x=JSON.parse('{"title":"GLSL 常用函数分类手册","description":"","frontmatter":{},"headers":[],"relativePath":"工程化/WebGL/GSLS 常用函数.md","filePath":"工程化/WebGL/GSLS 常用函数.md","lastUpdated":1750039219000}'),c={name:"工程化/WebGL/GSLS 常用函数.md"};function a(h,t,l,n,s,i){return o(),e("div",null,t[0]||(t[0]=[r('<h1 id="glsl-常用函数分类手册" tabindex="-1">GLSL 常用函数分类手册 <a class="header-anchor" href="#glsl-常用函数分类手册" aria-label="Permalink to “GLSL 常用函数分类手册”">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_1-数学计算函数">1. 数学计算函数</a></li><li><a href="#_2-三角函数">2. 三角函数</a></li><li><a href="#_3-指数与对数函数">3. 指数与对数函数</a></li><li><a href="#_4-几何函数">4. 几何函数</a></li><li><a href="#_5-向量操作函数">5. 向量操作函数</a></li><li><a href="#_6-纹理采样函数">6. 纹理采样函数</a></li><li><a href="#_7-特殊函数">7. 特殊函数</a></li><li><a href="#使用说明">使用说明</a></li></ul></nav><p>以下是 GLSL 中常用函数的分类整理，适用于 <strong>GLSL ES 3.0+</strong>（OpenGL ES 3.0/WebGL 2 及以上版本）。按功能分为 7 大类：</p><hr><h2 id="_1-数学计算函数" tabindex="-1"><strong>1. 数学计算函数</strong> <a class="header-anchor" href="#_1-数学计算函数" aria-label="Permalink to “1. 数学计算函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>参数类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>abs(x)</code></td><td>所有标量/向量</td><td>绝对值</td><td><code>abs(-2.5) = 2.5</code></td></tr><tr><td><code>sign(x)</code></td><td>所有标量/向量</td><td>符号（-1, 0, 1）</td><td><code>sign(-3.0) = -1.0</code></td></tr><tr><td><code>floor(x)</code></td><td>所有标量/向量</td><td>向下取整</td><td><code>floor(2.7) = 2.0</code></td></tr><tr><td><code>ceil(x)</code></td><td>所有标量/向量</td><td>向上取整</td><td><code>ceil(2.1) = 3.0</code></td></tr><tr><td><code>round(x)</code></td><td>所有标量/向量</td><td>四舍五入</td><td><code>round(2.4) = 2.0</code></td></tr><tr><td><code>fract(x)</code></td><td>所有标量/向量</td><td>小数部分</td><td><code>fract(2.7) = 0.7</code></td></tr><tr><td><code>mod(x, y)</code></td><td>所有标量/向量</td><td>取模运算</td><td><code>mod(5.0, 3.0) = 2.0</code></td></tr><tr><td><code>min(x, y)</code></td><td>所有标量/向量</td><td>最小值</td><td><code>min(2.0, 5.0) = 2.0</code></td></tr><tr><td><code>max(x, y)</code></td><td>所有标量/向量</td><td>最大值</td><td><code>max(2.0, 5.0) = 5.0</code></td></tr><tr><td><code>clamp(x, min, max)</code></td><td>所有标量/向量</td><td>限制在 [min, max] 区间</td><td><code>clamp(10.0, 0.0, 1.0) = 1.0</code></td></tr><tr><td><code>mix(x, y, a)</code></td><td>所有标量/向量</td><td>线性插值：<code>x*(1-a) + y*a</code></td><td><code>mix(0.0, 10.0, 0.5) = 5.0</code></td></tr><tr><td><code>step(edge, x)</code></td><td>所有标量/向量</td><td>阶跃函数：<code>x &gt;= edge ? 1.0 : 0.0</code></td><td><code>step(0.5, 0.7) = 1.0</code></td></tr><tr><td><code>smoothstep(e0,e1,x)</code></td><td>所有标量/向量</td><td>平滑过渡：<code>x</code> 在 [e0, e1] 间插值</td><td><code>smoothstep(0.0,1.0,0.5)=0.5</code></td></tr></tbody></table><hr><h2 id="_2-三角函数" tabindex="-1"><strong>2. 三角函数</strong> <a class="header-anchor" href="#_2-三角函数" aria-label="Permalink to “2. 三角函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>参数类型</th><th>说明</th><th>注意</th></tr></thead><tbody><tr><td><code>sin(x)</code></td><td>弧度</td><td>正弦</td><td>输入为弧度（非角度）</td></tr><tr><td><code>cos(x)</code></td><td>弧度</td><td>余弦</td><td>同上</td></tr><tr><td><code>tan(x)</code></td><td>弧度</td><td>正切</td><td>同上</td></tr><tr><td><code>asin(x)</code></td><td>[-1,1]</td><td>反正弦（返回弧度）</td><td>返回值范围 <code>[-π/2, π/2]</code></td></tr><tr><td><code>acos(x)</code></td><td>[-1,1]</td><td>反余弦（返回弧度）</td><td>返回值范围 <code>[0, π]</code></td></tr><tr><td><code>atan(y, x)</code></td><td>标量</td><td>反正切（返回弧度）</td><td>正确处理所有象限</td></tr><tr><td><code>radians(x)</code></td><td>角度</td><td>角度 → 弧度</td><td><code>radians(180.0) = π</code></td></tr><tr><td><code>degrees(x)</code></td><td>弧度</td><td>弧度 → 角度</td><td><code>degrees(π) = 180.0</code></td></tr></tbody></table><hr><h2 id="_3-指数与对数函数" tabindex="-1"><strong>3. 指数与对数函数</strong> <a class="header-anchor" href="#_3-指数与对数函数" aria-label="Permalink to “3. 指数与对数函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>参数类型</th><th>说明</th></tr></thead><tbody><tr><td><code>pow(x, y)</code></td><td>标量/向量</td><td>幂运算 <code>x^y</code></td></tr><tr><td><code>exp(x)</code></td><td>标量/向量</td><td>自然指数 <code>e^x</code></td></tr><tr><td><code>exp2(x)</code></td><td>标量/向量</td><td><code>2^x</code></td></tr><tr><td><code>log(x)</code></td><td>标量/向量 (x&gt;0)</td><td>自然对数 <code>ln(x)</code></td></tr><tr><td><code>log2(x)</code></td><td>标量/向量 (x&gt;0)</td><td>以 2 为底的对数</td></tr><tr><td><code>sqrt(x)</code></td><td>标量/向量 (x≥0)</td><td>平方根</td></tr><tr><td><code>inversesqrt(x)</code></td><td>标量/向量 (x&gt;0)</td><td>平方根倒数（高效）</td></tr></tbody></table><hr><h2 id="_4-几何函数" tabindex="-1"><strong>4. 几何函数</strong> <a class="header-anchor" href="#_4-几何函数" aria-label="Permalink to “4. 几何函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>参数类型</th><th>说明</th></tr></thead><tbody><tr><td><code>length(v)</code></td><td>向量</td><td>向量长度 <code>|v|</code></td></tr><tr><td><code>distance(a, b)</code></td><td>向量</td><td>两点距离 <code>|a-b|</code></td></tr><tr><td><code>dot(a, b)</code></td><td>同维度向量</td><td>点积 <code>a·b</code></td></tr><tr><td><code>cross(a, b)</code></td><td><code>vec3</code></td><td>叉积（仅 3D 向量）</td></tr><tr><td><code>normalize(v)</code></td><td>向量</td><td>单位化向量 <code>v / |v|</code></td></tr><tr><td><code>faceforward(n, i, n_ref)</code></td><td>向量</td><td>确保法线朝向观察者</td></tr><tr><td><code>reflect(i, n)</code></td><td>向量</td><td>反射向量：<code>i - 2·dot(n,i)·n</code></td></tr><tr><td><code>refract(i, n, eta)</code></td><td>向量 + 标量</td><td>折射向量（eta=折射率比）</td></tr></tbody></table><hr><h2 id="_5-向量操作函数" tabindex="-1"><strong>5. 向量操作函数</strong> <a class="header-anchor" href="#_5-向量操作函数" aria-label="Permalink to “5. 向量操作函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>参数类型</th><th>说明</th></tr></thead><tbody><tr><td><code>any(v)</code></td><td><code>bvec</code></td><td>任意分量为 true 则返回 true</td></tr><tr><td><code>all(v)</code></td><td><code>bvec</code></td><td>所有分量为 true 则返回 true</td></tr><tr><td><code>not(v)</code></td><td><code>bvec</code></td><td>分量逻辑非</td></tr><tr><td><code>lessThan(a, b)</code></td><td>数值向量</td><td>逐分量 <code>&lt;</code> 比较，返回 <code>bvec</code></td></tr><tr><td><code>greaterThan(a, b)</code></td><td>数值向量</td><td>逐分量 <code>&gt;</code> 比较</td></tr><tr><td><code>equal(a, b)</code></td><td>任意向量</td><td>逐分量 <code>==</code> 比较</td></tr><tr><td><code>vec4(v, a)</code></td><td><code>vec3</code> + 标量</td><td>扩展向量（如 <code>vec3</code>→<code>vec4</code>）</td></tr></tbody></table><hr><h2 id="_6-纹理采样函数" tabindex="-1"><strong>6. 纹理采样函数</strong> <a class="header-anchor" href="#_6-纹理采样函数" aria-label="Permalink to “6. 纹理采样函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>texture(sampler, uv)</code></td><td>基础 2D 纹理采样</td></tr><tr><td><code>texture(sampler, uv, bias)</code></td><td>带 LOD 偏置的采样（片段着色器）</td></tr><tr><td><code>textureLod(sampler, uv, lod)</code></td><td>指定 LOD 级别采样（顶点着色器可用）</td></tr><tr><td><code>textureProj(sampler, projCoord)</code></td><td>投影纹理采样（自动除 <code>projCoord.w</code>）</td></tr><tr><td><code>textureOffset(sampler, uv, offset)</code></td><td>带整数偏移的采样（如 <code>offset=ivec2(1,0)</code>）</td></tr><tr><td><code>texelFetch(sampler, coord, lod)</code></td><td>直接通过整数坐标获取纹素（不滤波）</td></tr></tbody></table><blockquote><p><strong>采样器类型</strong>：<code>sampler2D</code>, <code>samplerCube</code>, <code>sampler2DArray</code> 等。</p></blockquote><hr><h2 id="_7-特殊函数" tabindex="-1"><strong>7. 特殊函数</strong> <a class="header-anchor" href="#_7-特殊函数" aria-label="Permalink to “7. 特殊函数”">​</a></h2><table tabindex="0"><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>dFdx(p)</code> / <code>dFdy(p)</code></td><td>求屏幕空间偏导数（片段着色器专用，用于计算梯度）</td></tr><tr><td><code>noise(x)</code></td><td><strong>已废弃</strong> 旧版 GLSL 的噪声函数（现代 GPU 通常用自定义算法替代）</td></tr></tbody></table><hr><h2 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to “使用说明”">​</a></h2><ol><li><strong>向量化操作</strong>：所有函数均支持标量和向量参数（如 <code>sin(vec2)</code> 返回 <code>vec2</code>）。</li><li><strong>精度限定符</strong>：实际使用时需结合精度（<code>highp</code>, <code>mediump</code>, <code>lowp</code>）。</li><li><strong>纹理采样</strong>：WebGL 1 需用 <code>texture2D</code>，WebGL 2+ 统一为 <code>texture</code>。</li></ol><blockquote><p>此手册覆盖 90% 常用场景，完整函数列表参考 <a href="https://www.khronos.org/registry/OpenGL/specs/es/3.0/GLSL_ES_Specification_3.00.pdf" target="_blank" rel="noreferrer">GLSL ES 3.0 规范</a>。</p></blockquote>',29)]))}const _=d(c,[["render",a]]);export{x as __pageData,_ as default};
