import{_ as s,c as l,o as a,a7 as e}from"./chunks/framework.t6yJIVLk.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"语言/CSS/Flex 布局.md","filePath":"语言/CSS/Flex 布局.md","lastUpdated":1750738239000}'),n={name:"语言/CSS/Flex 布局.md"};function t(h,i,p,k,d,o){return a(),l("div",null,i[0]||(i[0]=[e(`<h3 id="flex-布局属性" tabindex="-1">Flex 布局属性 <a class="header-anchor" href="#flex-布局属性" aria-label="Permalink to “Flex 布局属性”">​</a></h3><h4 id="一、容器属性-父元素" tabindex="-1"><strong>一、容器属性（父元素）</strong> <a class="header-anchor" href="#一、容器属性-父元素" aria-label="Permalink to “一、容器属性（父元素）”">​</a></h4><ol><li><p><strong><code>display</code></strong></p><ul><li>定义容器为 flex 布局</li><li>值： <ul><li><code>flex</code>：块级弹性容器</li><li><code>inline-flex</code>：行内弹性容器</li></ul></li></ul></li><li><p><strong><code>flex-direction</code></strong></p><ul><li>定义主轴方向（项目排列方向）</li><li>值： <ul><li><code>row</code>（默认）：水平从左到右</li><li><code>row-reverse</code>：水平从右到左</li><li><code>column</code>：垂直从上到下</li><li><code>column-reverse</code>：垂直从下到上</li></ul></li></ul></li><li><p><strong><code>flex-wrap</code></strong></p><ul><li>控制项目是否换行</li><li>值： <ul><li><code>nowrap</code>（默认）：不换行</li><li><code>wrap</code>：换行（第一行在上方）</li><li><code>wrap-reverse</code>：换行（第一行在下方）</li></ul></li></ul></li><li><p><strong><code>flex-flow</code></strong></p><ul><li><code>flex-direction</code> + <code>flex-wrap</code> 的简写</li><li>格式：<code>&lt;flex-direction&gt; &lt;flex-wrap&gt;</code></li><li>示例：<code>flex-flow: row wrap;</code></li></ul></li><li><p><strong><code>justify-content</code></strong></p><ul><li>定义项目在<strong>主轴</strong>上的对齐方式</li><li>值： <ul><li><code>flex-start</code>（默认）：左对齐</li><li><code>flex-end</code>：右对齐</li><li><code>center</code>：居中</li><li><code>space-between</code>：两端对齐（项目间等距）</li><li><code>space-around</code>：项目两侧等距</li><li><code>space-evenly</code>：所有间距完全相等</li></ul></li></ul></li><li><p><strong><code>align-items</code></strong></p><ul><li>定义项目在<strong>交叉轴</strong>上的对齐方式（单行）</li><li>值： <ul><li><code>stretch</code>（默认）：拉伸填满容器</li><li><code>flex-start</code>：顶部对齐</li><li><code>flex-end</code>：底部对齐</li><li><code>center</code>：垂直居中</li><li><code>baseline</code>：基线对齐</li></ul></li></ul></li><li><p><strong><code>align-content</code></strong></p><ul><li>定义<strong>多行项目</strong>在交叉轴上的对齐方式</li><li>值同 <code>justify-content</code></li><li><strong>注意</strong>：仅当 <code>flex-wrap: wrap</code> 时生效</li></ul></li></ol><hr><h4 id="二、项目属性-子元素" tabindex="-1"><strong>二、项目属性（子元素）</strong> <a class="header-anchor" href="#二、项目属性-子元素" aria-label="Permalink to “二、项目属性（子元素）”">​</a></h4><ol><li><p><strong><code>order</code></strong></p><ul><li>定义项目的排列顺序（数值越小越靠前）</li><li>默认值：<code>0</code></li><li>示例：<code>order: 1;</code></li></ul></li><li><p><strong><code>flex-grow</code></strong></p><ul><li>定义项目的放大比例（剩余空间分配）</li><li>默认值：<code>0</code>（不放大）</li><li>示例：<code>flex-grow: 2;</code>（占剩余空间2份）</li></ul></li><li><p><strong><code>flex-shrink</code></strong></p><ul><li>定义项目的缩小比例（空间不足时）</li><li>默认值：<code>1</code>（等比例缩小）</li><li><code>0</code>：禁止缩小</li></ul></li><li><p><strong><code>flex-basis</code></strong></p><ul><li>定义项目在分配空间前的初始大小</li><li>值：<code>auto</code>（默认） | <code>长度</code>（如 <code>200px</code>） | <code>content</code></li><li>优先级：<code>flex-basis &gt; width</code></li></ul></li><li><p><strong><code>flex</code></strong></p><ul><li><code>flex-grow</code> + <code>flex-shrink</code> + <code>flex-basis</code> 的简写</li><li>常用值： <ul><li><code>flex: 1</code> → <code>1 1 0%</code>（自适应占满剩余空间）</li><li><code>flex: none</code> → <code>0 0 auto</code>（固定大小）</li></ul></li></ul></li><li><p><strong><code>align-self</code></strong></p><ul><li>覆盖容器的 <code>align-items</code>，定义单个项目的对齐方式</li><li>值同 <code>align-items</code></li><li>示例：<code>align-self: flex-end;</code>（底部对齐）</li></ul></li></ol><hr><h3 id="使用示例" tabindex="-1"><strong>使用示例</strong> <a class="header-anchor" href="#使用示例" aria-label="Permalink to “使用示例”">​</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item item1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item item2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item item3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex-wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stretch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 占满剩余空间 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 顶部对齐 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 固定宽度200px，不放大/缩小 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 排在最前面 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="核心概念" tabindex="-1"><strong>核心概念</strong> <a class="header-anchor" href="#核心概念" aria-label="Permalink to “核心概念”">​</a></h3><ul><li><strong>主轴（Main Axis）</strong>：由 <code>flex-direction</code> 定义的方向（水平/垂直）。</li><li><strong>交叉轴（Cross Axis）</strong>：与主轴垂直的方向。</li></ul><blockquote><p>💡 <strong>最佳实践</strong>：</p><ul><li>使用 <code>flex: 1</code> 实现自适应布局</li><li>用 <code>justify-content: space-between</code> 实现导航栏均匀分布</li><li><code>align-items: center</code> 实现垂直居中</li></ul></blockquote><p>通过组合这些属性，可高效实现响应式布局、居中对齐、动态分配空间等效果。</p>`,14)]))}const E=s(n,[["render",t]]);export{c as __pageData,E as default};
