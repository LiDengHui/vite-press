import{_ as d,c as e,o,a7 as r}from"./chunks/framework.DGe06YP7.js";const g=JSON.parse('{"title":"js运算优先级","description":"","frontmatter":{"title":"js运算优先级","tags":["js"],"categories":["技术文档","前端","js"],"date":"2020-08-08T20:51:44.000Z"},"headers":[],"relativePath":"语言/JavaScript/运算优先级.md","filePath":"语言/JavaScript/运算优先级.md","lastUpdated":1750738239000}'),c={name:"语言/JavaScript/运算优先级.md"};function a(n,t,i,l,s,_){return o(),e("div",null,t[0]||(t[0]=[r('<h1 id="优先级表-20-高-0-低" tabindex="-1">优先级表[20(高)=&gt; 0(低)] <a class="header-anchor" href="#优先级表-20-高-0-低" aria-label="Permalink to “优先级表[20(高)=&gt; 0(低)]”">​</a></h1><table tabindex="0"><thead><tr><th>优先级</th><th>运算类型</th><th>关联性</th><th>运算符</th></tr></thead><tbody><tr><td>20</td><td>圆括号</td><td>n/a（不相关）</td><td><code>( … )</code></td></tr><tr><td>19</td><td>成员访问</td><td>从左到右</td><td><code>… . …</code></td></tr><tr><td>19</td><td>需计算的成员访问</td><td>从左到右</td><td><code>… [ … ]</code></td></tr><tr><td>19</td><td>new (带参数列表)</td><td>n/a</td><td><code>new … ( … )</code></td></tr><tr><td>19</td><td>函数调用</td><td>从左到右</td><td><code>… ( … )</code></td></tr><tr><td>19</td><td>可选链（Optional chaining）</td><td>从左到右</td><td><code>?.</code></td></tr><tr><td>18</td><td>new (无参数列表)</td><td>从右到左</td><td><code>new …</code></td></tr><tr><td>17</td><td>后置递增(运算符在后)</td><td>n/a</td><td><code>…++</code></td></tr><tr><td>17</td><td>后置递减(运算符在后)</td><td>n/a</td><td><code>…-- </code></td></tr><tr><td>16</td><td>逻辑非</td><td>从右到左</td><td><code>! …</code></td></tr><tr><td>16</td><td>按位非</td><td>从右到左</td><td><code>~ …</code></td></tr><tr><td>16</td><td>一元加法</td><td>从右到左</td><td><code>+ …</code></td></tr><tr><td>16</td><td>一元减法</td><td>从右到左</td><td><code>- …</code></td></tr><tr><td>16</td><td>前置递增</td><td>从右到左</td><td><code>++ …</code></td></tr><tr><td>16</td><td>前置递减</td><td>从右到左</td><td><code>-- …</code></td></tr><tr><td>16</td><td>typeof</td><td>从右到左</td><td><code>typeof …</code></td></tr><tr><td>16</td><td>void</td><td>从右到左</td><td><code>void …</code></td></tr><tr><td>16</td><td>delete</td><td>从右到左</td><td><code>delete …</code></td></tr><tr><td>16</td><td>await</td><td>从右到左</td><td><code>await …</code></td></tr><tr><td>15</td><td>幂</td><td>从右到左</td><td><code>… ** …</code></td></tr><tr><td>14</td><td>乘法</td><td>从左到右</td><td><code>… * … </code></td></tr><tr><td>14</td><td>除法</td><td>从左到右</td><td><code>… / … </code></td></tr><tr><td>14</td><td>取模</td><td>从左到右</td><td><code>… % …</code></td></tr><tr><td>13</td><td>加法</td><td>从左到右</td><td><code>… + …</code></td></tr><tr><td>13</td><td>减法</td><td>从左到右</td><td><code>… - …</code></td></tr><tr><td>12</td><td>按位左移</td><td>从左到右</td><td><code>… &lt;&lt; …</code></td></tr><tr><td>12</td><td>按位右移</td><td>从左到右</td><td><code>… &gt;&gt; …</code></td></tr><tr><td>12</td><td>无符号右移</td><td>从左到右</td><td><code>… &gt;&gt;&gt; …</code></td></tr><tr><td>11</td><td>小于</td><td>从左到右</td><td><code>… &lt; …</code></td></tr><tr><td>11</td><td>小于等于</td><td>从左到右</td><td><code>… &lt;= …</code></td></tr><tr><td>11</td><td>大于</td><td>从左到右</td><td><code>… &gt; …</code></td></tr><tr><td>11</td><td>大于等于</td><td>从左到右</td><td><code>… &gt;= …</code></td></tr><tr><td>11</td><td>in</td><td>从左到右</td><td><code>… in …</code></td></tr><tr><td>11</td><td>instanceof</td><td>从左到右</td><td><code>… instanceof …</code></td></tr><tr><td>10</td><td>等号</td><td>从左到右</td><td><code>… == …</code></td></tr><tr><td>10</td><td>非等号</td><td>从左到右</td><td><code>… != …</code></td></tr><tr><td>10</td><td>全等号</td><td>从左到右</td><td><code>… === …</code></td></tr><tr><td>10</td><td>非全等号</td><td>从左到右</td><td><code>… !== …</code></td></tr><tr><td>8</td><td>按位异或</td><td>从左到右</td><td><code>… ^ …</code></td></tr><tr><td>7</td><td>按位或</td><td>从左到右</td><td><code>… | …</code></td></tr><tr><td>6</td><td>逻辑与</td><td>从左到右</td><td><code>… &amp;&amp; …</code></td></tr><tr><td>5</td><td>逻辑或</td><td>从左到右</td><td><code>… || …</code></td></tr><tr><td>4</td><td>条件运算符</td><td>从右到左</td><td><code>… ? … : …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… = …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… += …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… -= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… *= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… /= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… %= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… &lt;&lt;= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… &gt;&gt;= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… &gt;&gt;&gt;= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… &amp;= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… ^= …</code></td></tr><tr><td>3</td><td>赋值</td><td>从右到左</td><td><code>… = …</code></td></tr><tr><td>2</td><td>yield</td><td>从右到左</td><td><code>yield …</code></td></tr><tr><td>2</td><td>yield*</td><td>从右到左</td><td><code>yield* …</code></td></tr><tr><td>1</td><td>展开运算符</td><td>n/a</td><td><code>... …</code></td></tr><tr><td>0</td><td>逗号</td><td>从左到右</td><td><code>… , …</code></td></tr></tbody></table>',2)]))}const h=d(c,[["render",a]]);export{g as __pageData,h as default};
