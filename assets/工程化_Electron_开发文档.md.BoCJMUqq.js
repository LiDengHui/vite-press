import{F as e,J as t,T as n,b as r,f as i,k as a,m as o,p as s,q as c,r as l}from"./chunks/plugin-vue_export-helper.CL7LGUog.js";const u=JSON.parse(`{"title":"Electron 应用开发文档","description":"","frontmatter":{},"headers":[],"relativePath":"工程化/Electron/开发文档.md","filePath":"工程化/Electron/开发文档.md","lastUpdated":1755860874000}`),d={name:`工程化/Electron/开发文档.md`};function f(r,u,d,f,p,m){let h=t(`Mermaid`);return e(),o(`div`,null,[u[6]||=s(`<h1 id="electron-应用开发文档" tabindex="-1">Electron 应用开发文档 <a class="header-anchor" href="#electron-应用开发文档" aria-label="Permalink to “Electron 应用开发文档”">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to “目录”">​</a></h2><ol><li><a href="#架构设计">架构设计</a></li><li><a href="#安装指南">安装指南</a></li><li><a href="#数据交互原理">数据交互原理</a></li><li><a href="#热更新机制">热更新机制</a></li><li><a href="#原理说明">原理说明</a></li><li><a href="#最佳实践">最佳实践</a></li></ol><hr><h2 id="_1-架构设计" tabindex="-1">1. 架构设计 <a name="架构设计"></a> <a class="header-anchor" href="#_1-架构设计" aria-label="Permalink to “1. 架构设计”">​</a></h2><p>Electron 应用采用<strong>主进程-渲染进程</strong>架构模型：</p>`,6),(e(),a(i,null,{default:n(()=>[l(h,{id:`mermaid-45`,class:`mermaid my-class main img`,graph:`graph%20TD%0A%20%20%20%20A%5B%E4%B8%BB%E8%BF%9B%E7%A8%8B%20Main%20Process%5D%20--%3E%7C%E5%88%9B%E5%BB%BA%7C%20B%5B%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%20Renderer%20Process%201%5D%0A%20%20%20%20A%20--%3E%7C%E5%88%9B%E5%BB%BA%7C%20C%5B%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%20Renderer%20Process%202%5D%0A%20%20%20%20A%20--%3E%7C%E5%88%9B%E5%BB%BA%7C%20D%5B%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%20Renderer%20Process%203%5D%0A%20%20%20%20%0A%20%20%20%20subgraph%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AE%BF%E9%97%AE%0A%20%20%20%20A%20--%3E%7CNode.js%20API%7C%20F%5B%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%5D%0A%20%20%20%20A%20--%3E%7CNode.js%20API%7C%20G%5B%E7%BD%91%E7%BB%9C%5D%0A%20%20%20%20A%20--%3E%7CNode.js%20API%7C%20H%5B%E7%B3%BB%E7%BB%9F%E5%AF%B9%E8%AF%9D%E6%A1%86%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%0A%20%20%20%20B%20--%3E%7CChromium%7C%20I%5B%E7%AA%97%E5%8F%A31%5D%0A%20%20%20%20C%20--%3E%7CChromium%7C%20J%5B%E7%AA%97%E5%8F%A32%5D%0A%20%20%20%20D%20--%3E%7CChromium%7C%20K%5B%E7%AA%97%E5%8F%A33%5D%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20B%20--%3E%7CIPC%7C%20A%0A%20%20%20%20C%20--%3E%7CIPC%7C%20A%0A%20%20%20%20D%20--%3E%7CIPC%7C%20A%0A`})]),fallback:n(()=>u[0]||=[c(` Loading... `,-1)]),_:1})),u[7]||=s(`<h3 id="架构说明" tabindex="-1">架构说明： <a class="header-anchor" href="#架构说明" aria-label="Permalink to “架构说明：”">​</a></h3><ul><li><p><strong>主进程</strong>：</p><ul><li>应用程序入口点</li><li>使用 Node.js 环境</li><li>管理所有窗口和应用程序生命周期</li><li>访问操作系统 API</li><li>只有一个主进程实例</li></ul></li><li><p><strong>渲染进程</strong>：</p><ul><li>每个窗口一个独立进程</li><li>基于 Chromium 的浏览器环境</li><li>运行前端代码（HTML/CSS/JS）</li><li>默认情况下无法直接访问 Node.js API</li></ul></li><li><p><strong>进程间通信 (IPC)</strong>：</p><ul><li>主进程与渲染进程通信的桥梁</li><li>使用 <code>ipcMain</code> 和 <code>ipcRenderer</code> 模块</li><li>支持同步和异步通信</li></ul></li></ul><hr><h2 id="_2-安装指南" tabindex="-1">2. 安装指南 <a name="安装指南"></a> <a class="header-anchor" href="#_2-安装指南" aria-label="Permalink to “2. 安装指南”">​</a></h2><h3 id="electron-开发环境安装流程" tabindex="-1">Electron 开发环境安装流程 <a class="header-anchor" href="#electron-开发环境安装流程" aria-label="Permalink to “Electron 开发环境安装流程”">​</a></h3>`,5),(e(),a(i,null,{default:n(()=>[l(h,{id:`mermaid-139`,class:`mermaid my-class main img`,graph:`graph%20LR%0A%20%20%20%20A%5B%E5%AE%89%E8%A3%85%20Node.js%5D%20--%3E%20B%5B%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%5D%0A%20%20%20%20B%20--%3E%20C%5B%E5%88%9D%E5%A7%8B%E5%8C%96%20npm%5D%0A%20%20%20%20C%20--%3E%20D%5B%E5%AE%89%E8%A3%85%20Electron%5D%0A%20%20%20%20D%20--%3E%20E%5B%E9%85%8D%E7%BD%AE%20package.json%5D%0A%20%20%20%20E%20--%3E%20F%5B%E5%88%9B%E5%BB%BA%E4%B8%BB%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%5D%0A%20%20%20%20F%20--%3E%20G%5B%E5%88%9B%E5%BB%BA%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%5D%0A%20%20%20%20G%20--%3E%20H%5B%E5%90%AF%E5%8A%A8%E5%BA%94%E7%94%A8%5D%0A`})]),fallback:n(()=>u[1]||=[c(` Loading... `,-1)]),_:1})),u[8]||=s(`<h3 id="详细步骤" tabindex="-1">详细步骤： <a class="header-anchor" href="#详细步骤" aria-label="Permalink to “详细步骤：”">​</a></h3><ol><li><p><strong>安装 Node.js</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 推荐安装 LTS 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://nodejs.org/</span></span></code></pre></div></li><li><p><strong>创建项目结构</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-electron-app</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-electron-app</span></span></code></pre></div></li><li><p><strong>初始化 npm 项目</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div></li><li><p><strong>安装 Electron</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> electron</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div></li><li><p><strong>配置 package.json</strong></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-electron-app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;electron .&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;electron&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^25.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>创建主进程文件 (main.js)</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    webPreferences: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      nodeIntegration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      contextIsolation: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  win.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whenReady</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(createWindow)</span></span></code></pre></div></li><li><p><strong>创建渲染进程文件 (index.html)</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Electron App&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello Electron!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Welcome to your first Electron application&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li><p><strong>启动应用</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></li></ol><hr><h2 id="_3-数据交互原理" tabindex="-1">3. 数据交互原理 <a name="数据交互原理"></a> <a class="header-anchor" href="#_3-数据交互原理" aria-label="Permalink to “3. 数据交互原理”">​</a></h2><p>Electron 进程间通信模型：</p>`,5),(e(),a(i,null,{default:n(()=>[l(h,{id:`mermaid-200`,class:`mermaid my-class main img`,graph:`sequenceDiagram%0A%20%20%20%20participant%20Renderer%20as%20%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%0A%20%20%20%20participant%20Main%20as%20%E4%B8%BB%E8%BF%9B%E7%A8%8B%0A%20%20%20%20participant%20System%20as%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%0A%20%20%20%20%0A%20%20%20%20Renderer-%3E%3EMain%3A%20ipcRenderer.send('request-data')%0A%20%20%20%20activate%20Main%0A%20%20%20%20Main-%3E%3ESystem%3A%20%E8%AE%BF%E9%97%AE%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%2F%E6%95%B0%E6%8D%AE%E5%BA%93%0A%20%20%20%20System--%3E%3EMain%3A%20%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%0A%20%20%20%20Main-%3E%3ERenderer%3A%20event.reply('response-data'%2C%20data)%0A%20%20%20%20deactivate%20Main%0A%20%20%20%20%0A%20%20%20%20Renderer-%3E%3ERenderer%3A%20%E6%9B%B4%E6%96%B0UI%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%0A%20%20%20%20%0A%20%20%20%20Main-%3E%3ERenderer%3A%20win.webContents.send('push-update')%0A%20%20%20%20activate%20Renderer%0A%20%20%20%20Renderer-%3E%3ERenderer%3A%20%E5%A4%84%E7%90%86%E6%9B%B4%E6%96%B0%0A%20%20%20%20deactivate%20Renderer%0A`})]),fallback:n(()=>u[2]||=[c(` Loading... `,-1)]),_:1})),u[9]||=s(`<h3 id="通信方法" tabindex="-1">通信方法： <a class="header-anchor" href="#通信方法" aria-label="Permalink to “通信方法：”">​</a></h3><ol><li><p><strong>渲染进程 → 主进程</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 渲染进程中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ipcRenderer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ipcRenderer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;request-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {param: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主进程中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ipcMain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;request-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 处理请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  event.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;response-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><p><strong>主进程 → 渲染进程</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主进程中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> win</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BrowserWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">win.webContents.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;update-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 渲染进程中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ipcRenderer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;update-data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 更新UI</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><p><strong>渲染进程 ↔ 渲染进程</strong></p><ul><li>通过主进程中转</li><li>使用 <code>window.postMessage</code></li></ul></li></ol><hr><h2 id="_4-热更新机制" tabindex="-1">4. 热更新机制 <a name="热更新机制"></a> <a class="header-anchor" href="#_4-热更新机制" aria-label="Permalink to “4. 热更新机制”">​</a></h2><p>开发环境热更新方案：</p>`,5),(e(),a(i,null,{default:n(()=>[l(h,{id:`mermaid-242`,class:`mermaid my-class main img`,graph:`graph%20TB%0A%20%20%20%20subgraph%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%0A%20%20%20%20A%5B%E4%BB%A3%E7%A0%81%E4%BF%AE%E6%94%B9%5D%20--%3E%20B%7B%E4%BF%AE%E6%94%B9%E7%B1%BB%E5%9E%8B%7D%0A%20%20%20%20B%20--%3E%7C%E4%B8%BB%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%7C%20C%5B%E9%87%8D%E5%90%AF%E6%95%B4%E4%B8%AA%E5%BA%94%E7%94%A8%5D%0A%20%20%20%20B%20--%3E%7C%E6%B8%B2%E6%9F%93%E8%BF%9B%E7%A8%8B%E6%96%87%E4%BB%B6%7C%20D%5B%E5%88%B7%E6%96%B0%E5%BD%93%E5%89%8D%E7%AA%97%E5%8F%A3%5D%0A%20%20%20%20B%20--%3E%7CCSS%2F%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%7C%20E%5B%E6%B3%A8%E5%85%A5%E6%9B%B4%E6%96%B0%5D%0A%20%20%20%20%0A%20%20%20%20D%20--%3E%20F%5B%E4%BF%9D%E7%95%99%E5%BA%94%E7%94%A8%E7%8A%B6%E6%80%81%5D%0A%20%20%20%20E%20--%3E%20F%0A%20%20%20%20end%0A%20%20%20%20%0A%20%20%20%20subgraph%20%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%0A%20%20%20%20G%5B%E6%96%B0%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83%5D%20--%3E%20H%5B%E6%A3%80%E6%9F%A5%E6%9B%B4%E6%96%B0%5D%0A%20%20%20%20H%20--%3E%20I%7B%E6%9C%89%E6%9B%B4%E6%96%B0%3F%7D%0A%20%20%20%20I%20--%3E%7C%E6%98%AF%7C%20J%5B%E4%B8%8B%E8%BD%BD%E6%9B%B4%E6%96%B0%5D%0A%20%20%20%20J%20--%3E%20K%5B%E5%BA%94%E7%94%A8%E9%80%80%E5%87%BA%E6%97%B6%E5%AE%89%E8%A3%85%5D%0A%20%20%20%20I%20--%3E%7C%E5%90%A6%7C%20L%5B%E7%BB%A7%E7%BB%AD%E8%BF%90%E8%A1%8C%5D%0A%20%20%20%20end%0A`})]),fallback:n(()=>u[3]||=[c(` Loading... `,-1)]),_:1})),u[10]||=s(`<h3 id="实现方案" tabindex="-1">实现方案： <a class="header-anchor" href="#实现方案" aria-label="Permalink to “实现方案：”">​</a></h3><ol><li><p><strong>开发热重载</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 安装 electron-reloader</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm install electron</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">reloader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在主进程文件中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron-reloader&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    watchRenderer: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (_) {}</span></span></code></pre></div></li><li><p><strong>生产环境自动更新</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主进程中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autoUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron-updater&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autoUpdater.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkForUpdatesAndNotify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autoUpdater.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;update-downloaded&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  autoUpdater.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">quitAndInstall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><p><strong>状态保持技巧</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在渲染进程中使用 localStorage</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;appState&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(state))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用启动时恢复</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> savedState</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;appState&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ol><hr><h2 id="_5-原理说明" tabindex="-1">5. 原理说明 <a name="原理说明"></a> <a class="header-anchor" href="#_5-原理说明" aria-label="Permalink to “5. 原理说明”">​</a></h2><h3 id="electron-运行原理" tabindex="-1">Electron 运行原理 <a class="header-anchor" href="#electron-运行原理" aria-label="Permalink to “Electron 运行原理”">​</a></h3>`,5),(e(),a(i,null,{default:n(()=>[l(h,{id:`mermaid-273`,class:`mermaid my-class main img`,graph:`graph%20BT%0A%20%20%20%20A%5BElectron%20%E5%BA%94%E7%94%A8%5D%20--%3E%20B%5BChromium%5D%0A%20%20%20%20A%20--%3E%20C%5BNode.js%5D%0A%20%20%20%20B%20--%3E%20D%5B%E6%B8%B2%E6%9F%93%E5%BC%95%E6%93%8E%20Blink%5D%0A%20%20%20%20B%20--%3E%20E%5BJavaScript%20%E5%BC%95%E6%93%8E%20V8%5D%0A%20%20%20%20C%20--%3E%20F%5B%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%20Libuv%5D%0A%20%20%20%20C%20--%3E%20G%5B%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%5D%0A%20%20%20%20%0A%20%20%20%20H%5B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%20API%5D%20--%3E%20C%0A%20%20%20%20I%5B%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%5D%20--%3E%20C%0A`})]),fallback:n(()=>u[4]||=[c(` Loading... `,-1)]),_:1})),u[11]||=s(`<h3 id="核心概念" tabindex="-1">核心概念： <a class="header-anchor" href="#核心概念" aria-label="Permalink to “核心概念：”">​</a></h3><ol><li><p><strong>Chromium 集成</strong></p><ul><li>提供现代浏览器功能</li><li>支持 Web 标准（HTML5, CSS3, ES6+）</li><li>多进程架构保障稳定性</li></ul></li><li><p><strong>Node.js 集成</strong></p><ul><li>访问文件系统和操作系统功能</li><li>使用 npm 生态系统</li><li>支持原生模块</li></ul></li><li><p><strong>进程隔离</strong></p><ul><li>主进程：操作系统资源访问</li><li>渲染进程：DOM 操作和 UI 渲染</li><li>通过 IPC 安全通信</li></ul></li><li><p><strong>上下文隔离</strong></p><ul><li>默认启用安全隔离</li><li>通过预加载脚本暴露安全 API</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 预加载脚本</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contextBridge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ipcRenderer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">contextBridge.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exposeInMainWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electronAPI&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  openFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ipcRenderer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dialog:openFile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 渲染进程中使用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.electronAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ol><hr><h2 id="_6-最佳实践" tabindex="-1">6. 最佳实践 <a name="最佳实践"></a> <a class="header-anchor" href="#_6-最佳实践" aria-label="Permalink to “6. 最佳实践”">​</a></h2><h3 id="安全建议" tabindex="-1">安全建议 <a class="header-anchor" href="#安全建议" aria-label="Permalink to “安全建议”">​</a></h3><ol><li>始终启用 <code>contextIsolation</code></li><li>禁用 <code>nodeIntegration</code>（使用预加载脚本代替）</li><li>验证 IPC 消息来源</li><li>使用 CSP 内容安全策略</li></ol><h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to “性能优化”">​</a></h3>`,7),(e(),a(i,null,{default:n(()=>[l(h,{id:`mermaid-395`,class:`mermaid my-class main img`,graph:`graph%20LR%0A%20%20%20%20A%5B%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%5D%20--%3E%20B%5B%E4%BD%BF%E7%94%A8%20BrowserView%20%E6%9B%BF%E4%BB%A3%20webview%5D%0A%20%20%20%20A%20--%3E%20C%5B%E5%90%AF%E7%94%A8%E7%A1%AC%E4%BB%B6%E5%8A%A0%E9%80%9F%5D%0A%20%20%20%20A%20--%3E%20D%5B%E4%BD%BF%E7%94%A8%20V8%20%E5%BF%AB%E7%85%A7%5D%0A%20%20%20%20A%20--%3E%20E%5B%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9D%97%5D%0A%20%20%20%20A%20--%3E%20F%5B%E5%A4%9A%E7%AA%97%E5%8F%A3%E5%A4%8D%E7%94%A8%E8%BF%9B%E7%A8%8B%5D%0A`})]),fallback:n(()=>u[5]||=[c(` Loading... `,-1)]),_:1})),u[12]||=s(`<h3 id="调试技巧" tabindex="-1">调试技巧 <a class="header-anchor" href="#调试技巧" aria-label="Permalink to “调试技巧”">​</a></h3><ol><li><p><strong>主进程调试</strong></p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">electron</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --inspect=5858</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>然后在 Chrome 中访问 <code>chrome://inspect</code></p></li><li><p><strong>渲染进程调试</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建窗口时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">win.webContents.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openDevTools</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li><li><p><strong>性能分析</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;electron&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">session.defaultSession.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadExtension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path/to/devtools-extension&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ol><h3 id="打包发布" tabindex="-1">打包发布 <a class="header-anchor" href="#打包发布" aria-label="Permalink to “打包发布”">​</a></h3><p>推荐工具：</p><ul><li>electron-builder</li><li>electron-forge</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装 electron-builder</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> electron-builder</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加打包脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;scripts&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &quot;pack&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;electron-builder --dir&quot;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  &quot;dist&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;electron-builder&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建配置文件 (electron-builder.yml)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.example.myapp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">productName:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> My</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Electron</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> App</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">directories:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  output:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">files:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;**/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;!node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">win:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  target:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nsis</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mac:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  target:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dmg</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linux:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  target:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AppImage</span></span></code></pre></div><hr><p>本文档提供了 Electron 开发的全面指南，包括架构设计、安装流程、数据交互机制、热更新方案和核心原理。实际开发中请根据应用需求调整配置，并始终遵循安全最佳实践。</p>`,8)])}var p=r(d,[[`render`,f]]);export{u as __pageData,p as default};