import{_ as e,c as t,o as r,a7 as i}from"./chunks/framework.C7ilHghW.js";const P=JSON.parse('{"title":"图片类型解析","description":"","frontmatter":{"title":"图片类型解析","date":"2019-08-02T12:07:05.000Z","tags":[]},"headers":[],"relativePath":"浏览器/性能优化/图片类型解析.md","filePath":"浏览器/性能优化/图片类型解析.md","lastUpdated":1750817186000}'),n={name:"浏览器/性能优化/图片类型解析.md"};function p(s,a,l,o,G,g){return r(),t("div",null,a[0]||(a[0]=[i('<h2 id="_1、gif" tabindex="-1">1、GIF <a class="header-anchor" href="#_1、gif" aria-label="Permalink to “1、GIF”">​</a></h2><p>GIF图是比较古老的web图片格式之一，可以追溯到1987，几乎所有的浏览器都支持这一种格式，老有老的好处嘛。GIF是一种索引色模式图片，所以GIF每帧图所表现的颜色最多为256种。GIF能够支持动画，也能支持背景透明，这点连古老的IE6都支持，所以在以前想要在项目中使用背景透明图片，有一些方案就是生成GIF图片。GIF与JPEG、PNG相比，在通常情况下确实体积比较小。不过里面如果放入了足够多帧的图片，那么可能就不是那种情况了。现在网络上的GIF可以说是爆炸式的再增长，显然更多的在与他的两个特点：支持动画与兼容性好。缺点就是：色彩表现度不够丰富。</p><h2 id="_2、jpeg、jpg" tabindex="-1">2、JPEG、JPG <a class="header-anchor" href="#_2、jpeg、jpg" aria-label="Permalink to “2、JPEG、JPG”">​</a></h2><p>平常我们大部分见到的静态图基本都是这种图片格式。这种格式的图片能比较好的表现各种色彩，主要在压缩的时候会有所失真（主要是压缩时，会在细节上把相邻的一些色彩给同化掉），也正因为如此，造就了这种图片格式体积的轻量。格式被各中老弱病残的浏览器兼容，不过不支持背景透明与动画。平时web上的广告图、相片、特大背景图、轮播图等等一些大图场景中，都适用这个。</p><h2 id="_3、png" tabindex="-1">3、PNG <a class="header-anchor" href="#_3、png" aria-label="Permalink to “3、PNG”">​</a></h2><p>PNG格式是有三种版本的，分别为PNG-8，PNG-24，PNG-32，所有这些版本都不支持动画的。PNG-8跟GIF类似的属性是相似的，都是索引色模式，而且都支持背景透明。相对比GIF格式好的特点在与背景透明时，图像边缘没有什么噪点，颜色表现更优秀。PNG-24其实就是无损压缩的JPEG。而PNG-32就是在PNG-24的基础上，增加了透明度的支持。PNG格式在老浏览器IE6以及以下，PNG-8透明度的支持度不是很好，PNG-32的透明度基本不支持。正因为如此，以前有一个js插件，专门应对IE6这种BUG，主要是用IE6里的滤镜来重新渲染图片达到透明.随着时代的发展，PNG也想进步，也想支持动画。所以，有人推出了APNG（Animated PNG）格式图片。从字面上理解，就是会动的PNG图片，不过这个技术实现上与PNG开发小组理念不合，没有得到有效推广。到现在，也就有Blink内核的浏览器（代表浏览器：火狐）有比较好的支持，其它的就无从谈起了。</p><h2 id="_4、webp" tabindex="-1">4、webP <a class="header-anchor" href="#_4、webp" aria-label="Permalink to “4、webP”">​</a></h2><p>这个格式的图片的格式是财大气粗的Google在2010发布出来的，它拥有现有位图格式的所有优点，包括体积小、色彩表现足够、支持动画（一开始是不支持的）。当然，新东西的缺点就是兼容性不是很好，还有就是呈现这种图片格式计算量比平常的图片要大很多。由于出生好，东西本身也不错，越来越多的开发者与设计者开始关注它。国内某家公司也在使用这种格式图片制作表情。</p><h2 id="_5、svg" tabindex="-1">5、SVG <a class="header-anchor" href="#_5、svg" aria-label="Permalink to “5、SVG”">​</a></h2><p>SVG是一种矢量图，在现在来说，得到的支持是很可观的。矢量图比位图一个天生的有点，就是它不管放多大都不会模糊。这种格式的图片，对一些简单的线条、 形状表现是很不错的，如果表达更复杂的图像（如照片），那这个就会变的太复杂。SVG能够支持动画（SVG的动画特性不能被IE浏览器很好的支持），以前的flash那样，还支持css样式的一些修改。我们现在网页上的很多icon图标都是使用这个的，svg也能够把多个SVG组合起来。总体来说，SVG还是一个比较看好的技术。</p><p>浏览器中，对于图片的技术更新一直突破，其较于文字来说唯一缺点就是体积太大，但图片的表现力是文字无法比拟的，也相信图片会越来越好吧。关于web上位图的技术还有一个是base64，这个是可以把的图片转化成为16位的代码直接插入web中。</p><p><img src="https://raw.githubusercontent.com/LiDengHui/images/master/img20190805120023.png" alt="20190805120023.png" data-zoomable="true" loading="lazy"></p><h2 id="给我一个最小图" tabindex="-1">给我一个最小图 <a class="header-anchor" href="#给我一个最小图" aria-label="Permalink to “给我一个最小图”">​</a></h2><p>，1x1像素是最小的合法图片。而且，因为是通过图片打点，所以图片最好是透明的，这样一来不会影响页面本身展示效果，二者表示图片透明只要使用一个二进制位标记图片是透明色即可，不用存储色彩空间数据，可以节约体积。因为需要透明色，所以可以直接排除JEPG(BMP32格式可以支持透明色)。</p><h3 id="_1-1-透明图像比较" tabindex="-1">1*1 透明图像比较 <a class="header-anchor" href="#_1-1-透明图像比较" aria-label="Permalink to “1*1 透明图像比较”">​</a></h3><p>BMP:</p><p><img src="https://raw.githubusercontent.com/LiDengHui/images/master/img20190810010912.png" alt="20190810010912.png" data-zoomable="true" loading="lazy"></p><p>PNG:</p><p><img src="https://raw.githubusercontent.com/LiDengHui/images/master/img20190810011026.png" alt="20190810011026.png" data-zoomable="true" loading="lazy"></p><p>GIF:</p><p><img src="https://raw.githubusercontent.com/LiDengHui/images/master/img20190810011056.png" alt="20190810011056.png" data-zoomable="true" loading="lazy"></p><p>可以看到，最小的BMP文件需要74个字节，PNG需要67个字节，而合法的GIF，只需要43个字节。同样的响应，GIF可以比BMP节约41%的流量，比PNG节约35%的流量</p>',22)]))}const d=e(n,[["render",p]]);export{P as __pageData,d as default};
