import{_ as p,c as a,o as s,j as t,t as r,G as d,H as g,J as c,I as h,b as k,b8 as x,b9 as _,ba as y,w as b}from"./chunks/framework.DGe06YP7.js";const v={class:"blog-item"},j={class:"image-container"},B=["src","alt"],A={class:"image-overlay"},D=["href"],M={class:"item-content"},P={class:"item-title"},I={class:"item-description"},S={class:"item-tags"},$={__name:"BlogItem",props:{item:{default:()=>({title:"",img:"",description:"",link:"",tags:[]})}},setup(i){return(o,e)=>(s(),a("div",v,[t("div",j,[t("img",{src:i.item.img,alt:i.item.title,class:"item-image"},null,8,B),t("div",A,[t("a",{href:i.item.link,target:"_blank",class:"view-button"},"查看项目",8,D)])]),t("div",M,[t("h3",P,r(i.item.title),1),t("p",I,r(i.item.description),1),t("div",S,[(s(!0),a(d,null,g(i.item.tags,(l,n)=>(s(),a("span",{key:n,class:"tag"},r(l),1))),128))])])]))}},H=p($,[["__scopeId","data-v-7993e422"]]),C={class:"blog-list"},z={__name:"BlogList",setup(i){const o=[{title:"FLIP动画实现演示",description:"FLIP动画是一种高性能的Web动画技术，它通过记录元素的初始和最终位置，然后应用反向变换来创建流畅的动画效果。这种技术特别适合处理布局变化时的元素动画。",img:"https://images.unsplash.com/photo-1550009158-9ebf69173e03?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1200&q=80",link:"https://lidenghui.github.io/flip-demo/",tags:["flip","动画"]},{title:"History API 单页应用功能说明",description:"这个示例展示了如何使用History API创建单页应用(SPA)，主要特点包括：",img:"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1200&q=80",link:"https://lidenghui.github.io/history-api/",tags:["浏览器","路由"]},{title:"Rust + WebAssembly 图像处理示例",description:"本示例演示如何使用Rust开发WebAssembly模块，实现浏览器端的图像处理功能。项目包含灰度转换、颜色反转、棕褐色调等常见滤镜，并支持在Web Worker中异步执行。：",img:"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1200&q=80",link:"https://lidenghui.github.io/rust-wasm-image-processor/",tags:["计算"]}];return(e,l)=>(s(),a(d,null,[l[0]||(l[0]=t("h2",null,"Demo展示",-1)),t("div",C,[(s(),a(d,null,g(o,n=>c(H,{key:n.title,item:n},null,8,["item"])),64))])],64))}},T=p(z,[["__scopeId","data-v-cd099c5c"]]),V={props:{title:String,description:String,link:String}},G=["href"],W={class:"item-content"},L={class:"item-title"},E=["title"];function J(i,o,e,l,n,u){return s(),a("a",{href:e.link,target:"_blank",class:"package-item"},[t("div",W,[t("h3",L,r(e.title),1),t("p",{class:"item-description",title:e.description},r(e.description),9,E)])],8,G)}const N=p(V,[["render",J],["__scopeId","data-v-1178fc1e"]]),O={components:{PackageItem:N},data(){return{packages:[{title:"@dhlx/resolver",description:"resolver 是一个强大的 TypeScript 工具函数，用于处理异步函数的执行结果，统一进行错误处理和结果包装，让您的异步代码更加简洁和可靠。",link:"https://www.npmjs.com/package/@dhlx/resolver"},{title:"@dhlx/delay",description:"delay 函数是一个用于实现延迟功能的实用工具函数。它接受一个以毫秒为单位的时间参数，并返回一个 Promise，在指定的时间过后成功解决",link:"https://www.npmjs.com/package/@dhlx/delay"},{title:"@dhlx/async-pool",description:"一个轻量级的 JavaScript 异步任务并发控制工具。它允许你限制同时运行的异步任务数量，确保在同一时间只执行指定数量的任务。",link:"https://www.npmjs.com/package/@dhlx/async-pool"},{title:"@dhlx/format-size-units",description:"A utility function to format file sizes from kilobytes (KB) to larger units like megabytes (MB), gigabytes (GB), terabytes (TB), and petabytes (PB).",link:"https://www.npmjs.com/package/@dhlx/format-size-units"},{title:"@dhlx/dhlx-cli",description:"dhlx 脚本",link:"https://www.npmjs.com/package/@dhlx/dhlx-cli"},{title:"@dhlx/async-compose",description:"AsyncCompose 是一个轻量的中间件组合器，适用于处理异步操作链。它允许你将多个中间件函数串联在一起，形成类似“洋葱模型”的执行顺序。此工具非常适合在 Koa、Express 等框架之外实现自定义中间件逻辑或其他需要异步控制流的场景。",link:"https://www.npmjs.com/package/@dhlx/async-compose"},{title:"@dhlx/virtual-scrolling",description:"vue3 虚拟滚动",link:"https://www.npmjs.com/package/@dhlx/virtual-scrolling"},{title:"@dhlx/event-target",description:"A lightweight TypeScript implementation of the EventTarget interface, supporting event listeners, event bubbling, and propagation control, designed for custom event-driven systems.",link:"https://www.npmjs.com/package/@dhlx/event-target"},{title:"@dhlx/signal",description:"A lightweight reactive data library providing Signal and Computed objects for state management and automatic updates, tracking dependencies and simplifying data handling.",link:"https://www.npmjs.com/package/@dhlx/signal"},{title:"@dhlx/text-template",description:"The `template` function is a customizable templating engine that takes a string with embedded template expressions, parses it, and returns a function that can render the template with dynamic data.",link:"https://www.npmjs.com/package/@dhlx/text-template"},{title:"@dhlx/diff-json",description:"diffJson is a utility for comparing two JSON objects and generating a detailed list of changes (additions, deletions, modifications). It supports nested objects and arrays, and allows you to configure which paths to include or exclude from the comparison.",link:"https://www.npmjs.com/package/@dhlx/diff-json"},{title:"@dhlx/red-black-tree",description:"这是一个用 TypeScript 实现的红黑树 (RBTree) 和基于红黑树的树映射 (TreeMap) 的 npm 包。该实现提供了高效的插入、删除、搜索操作，并支持键值对存储。",link:"https://www.npmjs.com/package/@dhlx/red-black-tree"},{title:"@dhlx/types",description:"typescript 工具类型",link:"https://www.npmjs.com/package/@dhlx/types"},{title:"@dhlx/uni-vite-static-proxy",description:"uni-app Enable local static file server with proxy forwarding",link:"https://www.npmjs.com/package/@dhlx/uni-vite-static-proxy"},{title:"@dhlx/event-emitter",description:"A simple event emitter for TypeScript.",link:"https://www.npmjs.com/package/@dhlx/event-emitter"},{title:"@dhlx/rwlock-shared",description:"A simple implementation of a read-write lock with shared read",link:"https://www.npmjs.com/package/@dhlx/rwlock-shared"},{title:"@dhlx/cookie",description:"轻量级浏览器 Cookie 操作工具库，提供类型安全的 Cookie 设置、获取和删除功能",link:"https://www.npmjs.com/package/@dhlx/cookie"},{title:"@dhlx/vitepress-plugin-drawio",description:"A VitePress plugin for rendering drawio diagrams.",link:"https://www.npmjs.com/package/@dhlx/vitepress-plugin-drawio"}]}}},F={class:"package-list-container"},q={class:"package-list"};function R(i,o,e,l,n,u){const w=h("PackageItem");return s(),a("div",F,[o[0]||(o[0]=t("h2",{class:"list-title"},"NPM包",-1)),t("div",q,[(s(!0),a(d,null,g(n.packages,(m,f)=>(s(),k(w,{key:f,title:m.title,description:m.description,link:m.link},null,8,["title","description","link"]))),128))])])}const Y=p(O,[["render",R],["__scopeId","data-v-ce67ab9a"]]),Q=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"点滴生活","text":"记录个人成长","tagline":"记录个人成长","image":{"src":"/favicon.svg","alt":"VitePress"},"actions":[{"theme":"brand","text":"个人随想","link":"/CSS/BFC布局.html"}]},"features":[{"title":"3D编辑器","link":"https://pinia.work/tool","details":"简单的3D编辑器"},{"title":"个人后台管理","link":"https://pinia.work/admin","details":"个人后台管理系统"},{"title":"three-learn","link":"https://lidenghui.github.io/three-learn/","details":"three demo"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1751078101000}'),K={name:"index.md"},X=Object.assign(K,{setup(i){return(o,e)=>{const l=h("MindMapView"),n=h("ClientOnly");return s(),a("div",null,[c(Y),c(T),e[0]||(e[0]=t("p",null,[t("img",{src:x,alt:"","data-zoomable":"true",loading:"lazy"})],-1)),e[1]||(e[1]=t("p",null,[t("img",{src:_,alt:"","data-zoomable":"true",loading:"lazy"})],-1)),e[2]||(e[2]=t("p",null,[t("img",{src:y,alt:"","data-zoomable":"true",loading:"lazy"})],-1)),c(n,null,{default:b(()=>[c(l,{data:'{"content":"","children":[{"content":"A","children":[{"content":"B","children":[{"content":"C","children":[{"content":"D","children":[{"content":"E","children":[],"payload":{"tag":"h5","lines":"4,5"}}],"payload":{"tag":"h4","lines":"3,4"}}],"payload":{"tag":"h3","lines":"2,3"}}],"payload":{"tag":"h2","lines":"1,2"}}],"payload":{"tag":"h1","lines":"0,1"}},{"content":"1","children":[{"content":"2","children":[{"content":"3","children":[{"content":"4","children":[{"content":"5","children":[],"payload":{"tag":"h5","lines":"9,10"}}],"payload":{"tag":"h4","lines":"8,9"}}],"payload":{"tag":"h3","lines":"7,8"}}],"payload":{"tag":"h2","lines":"6,7"}}],"payload":{"tag":"h1","lines":"5,6"}}]}',type:"fence"})]),_:1})])}}});export{Q as __pageData,X as default};
